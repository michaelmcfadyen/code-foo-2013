import java.util.ArrayList;


public class familyMember {
	private familyMember mother;
	private familyMember father;
	private String forename;
	private String surname;
	private ArrayList<familyMember> children;
	private SEX sex;

	public familyMember(familyMember m, familyMember f, String fore, String sur, SEX s){
		mother = m;
		father = f;
		forename = fore;
		surname = sur;
		children = new ArrayList<familyMember>();
		m.addChild(this);
		f.addChild(this);
		sex = s;
	}
	public familyMember(String f, String s,SEX sex){
		forename = f;
		surname = s;
		mother = null;
		father = null;
		children = new ArrayList<familyMember>();
		this.sex = sex;
	}
	public void setForename(String f){
		forename = f;
	}
	public void setSurname(String s){
		surname = s;
	}
	public void setMother(familyMember m){
		mother = m;
	}
	public void setFather(familyMember f){
		father = f;
	}
	public String getForename(){
		return forename;
	}
	public String getSurname(){
		return surname;
	}
	public SEX getSex(){
		return sex;
	}
	public int generation(){
		int gen = 0;
		if(mother != null && father !=null){
			int mgen = mother.generation(); 
			int fgen = father.generation();
			if(mgen > fgen)
				gen = 1+mgen;
			else
				gen = 1+fgen;
		}
		return gen;
	}
	public ArrayList<familyMember> getChildren(){
		return children;
	}
	public void addChild(familyMember child){
		children.add(child);
		if(getSex() == SEX.MALE){
			child.setFather(this);
		}
		else
			child.setMother(this);
	}
	public int noDescendants(){
		int descendants = children.size();
		for(int i = 0 ; i < children.size(); i++){
			descendants += children.get(i).noDescendants();
		}
		return descendants;
	}
	public String toString(){
		return getForename() + " " + getSurname();
	}
//	public enum SEX{
//		MALE, FEMALE;
//	}
	



}